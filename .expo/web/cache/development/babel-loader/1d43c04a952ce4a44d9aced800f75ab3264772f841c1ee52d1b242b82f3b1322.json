{"ast":null,"code":"\"use strict\";\n'use client';\n\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\nvar _jsxFileName = \"C:\\\\Users\\\\Sasha\\\\Desktop\\\\hahaton\\\\hahaton-front\\\\node_modules\\\\expo-router\\\\build\\\\modal\\\\web\\\\TransparentModalStackRouteDrawer.js\";\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TransparentModalStackRouteDrawer = TransparentModalStackRouteDrawer;\nconst react_1 = __importDefault(require(\"react\"));\nconst vaul_1 = require(\"vaul\");\nconst modalStyles_1 = __importDefault(require(\"./modalStyles\"));\nfunction TransparentModalStackRouteDrawer({\n  routeKey,\n  options,\n  renderScreen,\n  onDismiss\n}) {\n  const handleOpenChange = open => {\n    if (!open) onDismiss();\n  };\n  return _reactJsxDevRuntime.jsxDEV(vaul_1.Drawer.Root, {\n    defaultOpen: true,\n    autoFocus: true,\n    dismissible: options.gestureEnabled ?? false,\n    onAnimationEnd: handleOpenChange,\n    children: _reactJsxDevRuntime.jsxDEV(vaul_1.Drawer.Portal, {\n      children: _reactJsxDevRuntime.jsxDEV(vaul_1.Drawer.Content, {\n        className: modalStyles_1.default.transparentDrawerContent,\n        children: [_reactJsxDevRuntime.jsxDEV(vaul_1.Drawer.Title, {\n          about: \"\",\n          \"aria-describedby\": \"\",\n          className: modalStyles_1.default.srOnly\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), _reactJsxDevRuntime.jsxDEV(vaul_1.Drawer.Description, {\n          about: \"\",\n          className: modalStyles_1.default.srOnly\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), _reactJsxDevRuntime.jsxDEV(\"div\", {\n          className: modalStyles_1.default.modalBody,\n          children: renderScreen()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, `${routeKey}-transparent`, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 13\n  }, this);\n}","map":{"version":3,"names":["_reactJsxDevRuntime","require","_jsxFileName","exports","TransparentModalStackRouteDrawer","react_1","__importDefault","vaul_1","modalStyles_1","routeKey","options","renderScreen","onDismiss","handleOpenChange","open","jsxDEV","Drawer","Root","defaultOpen","autoFocus","dismissible","gestureEnabled","onAnimationEnd","children","Portal","Content","className","default","transparentDrawerContent","Title","about","srOnly","fileName","lineNumber","columnNumber","Description","modalBody"],"sources":["C:\\Users\\Sasha\\Desktop\\hahaton\\hahaton-front\\node_modules\\expo-router\\src\\modal\\web\\TransparentModalStackRouteDrawer.tsx"],"sourcesContent":["'use client';\nimport React from 'react';\nimport { Drawer } from 'vaul';\n\nimport modalStyles from './modalStyles';\nimport { ExtendedStackNavigationOptions } from '../../layouts/StackClient';\n\nfunction TransparentModalStackRouteDrawer({\n  routeKey,\n  options,\n  renderScreen,\n  onDismiss,\n}: {\n  routeKey: string;\n  options: ExtendedStackNavigationOptions;\n  renderScreen: () => React.ReactNode;\n  onDismiss: () => void;\n}) {\n  const handleOpenChange = (open: boolean) => {\n    if (!open) onDismiss();\n  };\n\n  return (\n    <Drawer.Root\n      defaultOpen\n      autoFocus\n      key={`${routeKey}-transparent`}\n      dismissible={options.gestureEnabled ?? false}\n      onAnimationEnd={handleOpenChange}>\n      <Drawer.Portal>\n        <Drawer.Content className={modalStyles.transparentDrawerContent}>\n          {/* TODO:(@Hirbod) Figure out how to add title and description to the modal for screen readers in a meaningful way */}\n          <Drawer.Title about=\"\" aria-describedby=\"\" className={modalStyles.srOnly} />\n          <Drawer.Description about=\"\" className={modalStyles.srOnly} />\n          {/* Render the screen content */}\n          <div className={modalStyles.modalBody}>{renderScreen()}</div>\n        </Drawer.Content>\n      </Drawer.Portal>\n    </Drawer.Root>\n  );\n}\n\nexport { TransparentModalStackRouteDrawer };\n"],"mappings":";AAAA,YAAY;;AAAC,IAAAA,mBAAA,GAAAC,OAAA;AAAA,IAAAC,YAAA;;;;;;;;;AA0CJC,OAAA,CAAAC,gCAAA,GAAAA,gCAAA;AAzCT,MAAAC,OAAA,GAAAC,eAAA,CAAAL,OAAA;AACA,MAAAM,MAAA,GAAAN,OAAA;AAEA,MAAAO,aAAA,GAAAF,eAAA,CAAAL,OAAA;AAGA,SAASG,gCAAgCA,CAAC;EACxCK,QAAQ;EACRC,OAAO;EACPC,YAAY;EACZC;AAAS,CAMV;EACC,MAAMC,gBAAgB,GAAIC,IAAa,IAAI;IACzC,IAAI,CAACA,IAAI,EAAEF,SAAS,EAAE;EACxB,CAAC;EAED,OACEZ,mBAAA,CAAAe,MAAA,CAACR,MAAA,CAAAS,MAAM,CAACC,IAAI;IACVC,WAAW;IACXC,SAAS;IAETC,WAAW,EAAEV,OAAO,CAACW,cAAc,IAAI,KAAM;IAC7CC,cAAc,EAAET,gBAAiB;IAAAU,QAAA,EACjCvB,mBAAA,CAAAe,MAAA,CAACR,MAAA,CAAAS,MAAM,CAACQ,MAAM;MAAAD,QAAA,EACZvB,mBAAA,CAAAe,MAAA,CAACR,MAAA,CAAAS,MAAM,CAACS,OAAO;QAACC,SAAS,EAAElB,aAAA,CAAAmB,OAAW,CAACC,wBAAyB;QAAAL,QAAA,GAE9DvB,mBAAA,CAAAe,MAAA,CAACR,MAAA,CAAAS,MAAM,CAACa,KAAK;UAACC,KAAK,EAAC,EAAE;UAAC,oBAAiB,EAAE;UAACJ,SAAS,EAAElB,aAAA,CAAAmB,OAAW,CAACI;QAAO;UAAAC,QAAA,EAAA9B,YAAA;UAAA+B,UAAA;UAAAC,YAAA;QAAA,QACzE,EAAAlC,mBAAA,CAAAe,MAAA,CAACR,MAAA,CAAAS,MAAM,CAACmB,WAAW;UAACL,KAAK,EAAC,EAAE;UAACJ,SAAS,EAAElB,aAAA,CAAAmB,OAAW,CAACI;QAAO;UAAAC,QAAA,EAAA9B,YAAA;UAAA+B,UAAA;UAAAC,YAAA;QAAA,QAC3D,EACAlC,mBAAA,CAAAe,MAAA;UAAKW,SAAS,EAAElB,aAAA,CAAAmB,OAAW,CAACS,SAAU;UAAAb,QAAA,EAAEZ,YAAY;QAAE;UAAAqB,QAAA,EAAA9B,YAAA;UAAA+B,UAAA;UAAAC,YAAA;QAAA,OAAM,CAC9D;MAAA;QAAAF,QAAA,EAAA9B,YAAA;QAAA+B,UAAA;QAAAC,YAAA;MAAA,OAAgB;IAClB;MAAAF,QAAA,EAAA9B,YAAA;MAAA+B,UAAA;MAAAC,YAAA;IAAA,OAAe;EACjB,GAZO,GAAGzB,QAAQ,cAAc;IAAAuB,QAAA,EAAA9B,YAAA;IAAA+B,UAAA;IAAAC,YAAA;EAAA,OAYnB,CAAC;AAElB","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}