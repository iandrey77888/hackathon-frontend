{"ast":null,"code":"\"use strict\";\n'use client';\n\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\nvar _jsxFileName = \"C:\\\\Users\\\\Sasha\\\\Desktop\\\\hahaton\\\\hahaton-front\\\\node_modules\\\\expo-router\\\\build\\\\modal\\\\ModalContext.js\";\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.useModalContext = exports.ModalContextProvider = void 0;\nconst react_1 = require(\"react\");\nconst ModalsRenderer_1 = require(\"./ModalsRenderer\");\nconst ALLOWED_EVENT_TYPE_LISTENERS = ['close', 'show'];\nconst ModalContext = (0, react_1.createContext)(undefined);\nconst ModalContextProvider = ({\n  children\n}) => {\n  const [modalConfigs, setModalConfigs] = (0, react_1.useState)([]);\n  const eventListeners = (0, react_1.useRef)({\n    close: new Set(),\n    show: new Set()\n  });\n  const prevModalConfigs = (0, react_1.useRef)([]);\n  (0, react_1.useEffect)(() => {\n    if (prevModalConfigs.current !== modalConfigs) {\n      prevModalConfigs.current.forEach(config => {\n        if (!modalConfigs.find(c => c.uniqueId === config.uniqueId)) {\n          emitCloseEvent(config.uniqueId);\n        }\n      });\n      prevModalConfigs.current = modalConfigs;\n    }\n  }, [modalConfigs]);\n  const openModal = (0, react_1.useCallback)(config => {\n    setModalConfigs(prev => [...prev, config]);\n  }, []);\n  const updateModal = (0, react_1.useCallback)((id, config) => {\n    setModalConfigs(prev => {\n      const index = prev.findIndex(c => c.uniqueId === id);\n      if (index >= 0) {\n        const updatedConfigs = [...prev];\n        updatedConfigs[index] = Object.assign({}, updatedConfigs[index], config);\n        return updatedConfigs;\n      }\n      return prev;\n    });\n  }, []);\n  const emitCloseEvent = (0, react_1.useCallback)(id => {\n    eventListeners.current.close.forEach(callback => callback(id));\n  }, []);\n  const emitShowEvent = (0, react_1.useCallback)(id => {\n    eventListeners.current.show.forEach(callback => callback(id));\n  }, []);\n  const closeModal = (0, react_1.useCallback)(id => {\n    setModalConfigs(prev => {\n      const modalIndex = prev.findIndex(config => config.uniqueId === id);\n      if (modalIndex >= 0) {\n        return prev.filter((_, index) => index < modalIndex);\n      }\n      return prev;\n    });\n  }, []);\n  const addEventListener = (0, react_1.useCallback)((type, callback) => {\n    if (!ALLOWED_EVENT_TYPE_LISTENERS.includes(type)) return () => {};\n    if (!callback) {\n      console.warn('Passing undefined as a callback to addEventListener is forbidden');\n      return () => {};\n    }\n    eventListeners.current[type].add(callback);\n    return () => {\n      eventListeners.current[type].delete(callback);\n    };\n  }, []);\n  return _reactJsxDevRuntime.jsxDEV(ModalContext.Provider, {\n    value: {\n      modalConfigs,\n      openModal,\n      closeModal,\n      updateModal,\n      addEventListener\n    },\n    children: _reactJsxDevRuntime.jsxDEV(ModalsRenderer_1.ModalsRenderer, {\n      modalConfigs: modalConfigs,\n      onDismissed: id => {\n        closeModal(id);\n      },\n      onShow: emitShowEvent,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 13\n  }, this);\n};\nexports.ModalContextProvider = ModalContextProvider;\nconst useModalContext = () => {\n  const context = (0, react_1.use)(ModalContext);\n  if (!context) {\n    throw new Error('useModalContext must be used within a ModalContextProvider');\n  }\n  return context;\n};\nexports.useModalContext = useModalContext;","map":{"version":3,"names":["_reactJsxDevRuntime","require","_jsxFileName","react_1","ModalsRenderer_1","ALLOWED_EVENT_TYPE_LISTENERS","ModalContext","createContext","undefined","ModalContextProvider","children","modalConfigs","setModalConfigs","useState","eventListeners","useRef","close","Set","show","prevModalConfigs","useEffect","current","forEach","config","find","c","uniqueId","emitCloseEvent","openModal","useCallback","prev","updateModal","id","index","findIndex","updatedConfigs","Object","assign","callback","emitShowEvent","closeModal","modalIndex","filter","_","addEventListener","type","includes","console","warn","add","delete","jsxDEV","Provider","value","ModalsRenderer","onDismissed","onShow","fileName","lineNumber","columnNumber","exports","useModalContext","context","use","Error"],"sources":["C:\\Users\\Sasha\\Desktop\\hahaton\\hahaton-front\\node_modules\\expo-router\\src\\modal\\ModalContext.tsx"],"sourcesContent":["'use client';\n\nimport {\n  createContext,\n  use,\n  useCallback,\n  useEffect,\n  useRef,\n  useState,\n  type PropsWithChildren,\n} from 'react';\n\nimport { ModalsRenderer } from './ModalsRenderer';\nimport { type ModalConfig } from './types';\n\nexport { type ModalConfig };\n\nconst ALLOWED_EVENT_TYPE_LISTENERS = ['close', 'show'] as const;\ntype AllowedEventTypeListeners = (typeof ALLOWED_EVENT_TYPE_LISTENERS)[number];\n\nexport interface ModalContextType {\n  modalConfigs: ModalConfig[];\n  openModal: (config: ModalConfig) => void;\n  updateModal: (id: string, config: Omit<Partial<ModalConfig>, 'uniqueId'>) => void;\n  closeModal: (id: string) => void;\n  addEventListener: (type: AllowedEventTypeListeners, callback: (id: string) => void) => () => void;\n}\n\nconst ModalContext = createContext<ModalContextType | undefined>(undefined);\n\nexport const ModalContextProvider = ({ children }: PropsWithChildren) => {\n  const [modalConfigs, setModalConfigs] = useState<ModalConfig[]>([]);\n  const eventListeners = useRef<Record<AllowedEventTypeListeners, Set<(id: string) => void>>>({\n    close: new Set(),\n    show: new Set(),\n  });\n  const prevModalConfigs = useRef<ModalConfig[]>([]);\n\n  useEffect(() => {\n    if (prevModalConfigs.current !== modalConfigs) {\n      prevModalConfigs.current.forEach((config) => {\n        if (!modalConfigs.find((c) => c.uniqueId === config.uniqueId)) {\n          emitCloseEvent(config.uniqueId);\n        }\n      });\n      prevModalConfigs.current = modalConfigs;\n    }\n  }, [modalConfigs]);\n\n  const openModal = useCallback((config: ModalConfig) => {\n    setModalConfigs((prev) => [...prev, config]);\n  }, []);\n\n  const updateModal = useCallback((id: string, config: Omit<Partial<ModalConfig>, 'uniqueId'>) => {\n    setModalConfigs((prev) => {\n      const index = prev.findIndex((c) => c.uniqueId === id);\n      if (index >= 0) {\n        const updatedConfigs = [...prev];\n        updatedConfigs[index] = { ...updatedConfigs[index], ...config };\n        return updatedConfigs;\n      }\n      return prev;\n    });\n  }, []);\n\n  const emitCloseEvent = useCallback((id: string) => {\n    eventListeners.current.close.forEach((callback) => callback(id));\n  }, []);\n\n  const emitShowEvent = useCallback((id: string) => {\n    eventListeners.current.show.forEach((callback) => callback(id));\n  }, []);\n\n  const closeModal = useCallback((id: string) => {\n    setModalConfigs((prev) => {\n      const modalIndex = prev.findIndex((config) => config.uniqueId === id);\n      if (modalIndex >= 0) {\n        return prev.filter((_, index) => index < modalIndex);\n      }\n      return prev;\n    });\n  }, []);\n\n  const addEventListener = useCallback(\n    (type: AllowedEventTypeListeners, callback: (id: string) => void) => {\n      if (!ALLOWED_EVENT_TYPE_LISTENERS.includes(type)) return () => {};\n\n      if (!callback) {\n        console.warn('Passing undefined as a callback to addEventListener is forbidden');\n        return () => {};\n      }\n\n      eventListeners.current[type].add(callback);\n\n      return () => {\n        eventListeners.current[type].delete(callback);\n      };\n    },\n    []\n  );\n\n  return (\n    <ModalContext.Provider\n      value={{\n        modalConfigs,\n        openModal,\n        closeModal,\n        updateModal,\n        addEventListener,\n      }}>\n      <ModalsRenderer\n        modalConfigs={modalConfigs}\n        onDismissed={(id) => {\n          closeModal(id);\n        }}\n        onShow={emitShowEvent}>\n        {children}\n      </ModalsRenderer>\n    </ModalContext.Provider>\n  );\n};\n\nexport const useModalContext = () => {\n  const context = use(ModalContext);\n  if (!context) {\n    throw new Error('useModalContext must be used within a ModalContextProvider');\n  }\n  return context;\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}