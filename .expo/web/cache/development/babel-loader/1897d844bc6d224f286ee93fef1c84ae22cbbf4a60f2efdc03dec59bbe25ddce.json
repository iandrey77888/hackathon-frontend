{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.filterAllowedChildrenElements = filterAllowedChildrenElements;\nexports.isChildOfType = isChildOfType;\nexports.shouldTabBeVisible = shouldTabBeVisible;\nconst react_1 = __importDefault(require(\"react\"));\nfunction filterAllowedChildrenElements(children, components) {\n  return react_1.default.Children.toArray(children).filter(child => react_1.default.isValidElement(child) && components.includes(child.type));\n}\nfunction isChildOfType(child, type) {\n  return react_1.default.isValidElement(child) && child.type === type;\n}\nfunction shouldTabBeVisible(options) {\n  return options.hidden === false;\n}","map":{"version":3,"names":["exports","filterAllowedChildrenElements","isChildOfType","shouldTabBeVisible","react_1","__importDefault","require","children","components","default","Children","toArray","filter","child","isValidElement","includes","type","options","hidden"],"sources":["C:\\Users\\Sasha\\Desktop\\hahaton\\hahaton-front\\node_modules\\expo-router\\src\\native-tabs\\NativeBottomTabs\\utils.ts"],"sourcesContent":["import type { JSXElementConstructor, ReactNode } from 'react';\nimport React from 'react';\n\nimport type { ExtendedNativeTabOptions } from './types';\n\nexport function filterAllowedChildrenElements<Components extends JSXElementConstructor<any>[]>(\n  children: ReactNode | ReactNode[],\n  components: Components\n): React.ReactElement<React.ComponentProps<Components[number]>, Components[number]>[] {\n  return React.Children.toArray(children).filter(\n    (\n      child\n    ): child is React.ReactElement<React.ComponentProps<Components[number]>, Components[number]> =>\n      React.isValidElement(child) && components.includes(child.type as (props: any) => ReactNode)\n  );\n}\n\nexport function isChildOfType<T extends JSXElementConstructor<any>>(\n  child: ReactNode,\n  type: T\n): child is React.ReactElement<React.ComponentProps<T>, T> {\n  return React.isValidElement(child) && child.type === type;\n}\n\nexport function shouldTabBeVisible(options: ExtendedNativeTabOptions): boolean {\n  // The <NativeTab.Trigger> always sets `hidden` to defined boolean value.\n  // If it is not defined, then it was not specified, and we should hide the tab.\n  return options.hidden === false;\n}\n"],"mappings":";;;;;;;;;;AAKAA,OAAA,CAAAC,6BAAA,GAAAA,6BAAA;AAYAD,OAAA,CAAAE,aAAA,GAAAA,aAAA;AAOAF,OAAA,CAAAG,kBAAA,GAAAA,kBAAA;AAvBA,MAAAC,OAAA,GAAAC,eAAA,CAAAC,OAAA;AAIA,SAAgBL,6BAA6BA,CAC3CM,QAAiC,EACjCC,UAAsB;EAEtB,OAAOJ,OAAA,CAAAK,OAAK,CAACC,QAAQ,CAACC,OAAO,CAACJ,QAAQ,CAAC,CAACK,MAAM,CAE1CC,KAAK,IAELT,OAAA,CAAAK,OAAK,CAACK,cAAc,CAACD,KAAK,CAAC,IAAIL,UAAU,CAACO,QAAQ,CAACF,KAAK,CAACG,IAAiC,CAAC,CAC9F;AACH;AAEA,SAAgBd,aAAaA,CAC3BW,KAAgB,EAChBG,IAAO;EAEP,OAAOZ,OAAA,CAAAK,OAAK,CAACK,cAAc,CAACD,KAAK,CAAC,IAAIA,KAAK,CAACG,IAAI,KAAKA,IAAI;AAC3D;AAEA,SAAgBb,kBAAkBA,CAACc,OAAiC;EAGlE,OAAOA,OAAO,CAACC,MAAM,KAAK,KAAK;AACjC","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}