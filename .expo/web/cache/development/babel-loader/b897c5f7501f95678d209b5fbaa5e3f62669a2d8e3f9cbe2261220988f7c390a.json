{"ast":null,"code":"\"use strict\";\n'use client';\n\nvar _reactJsxDevRuntime = require(\"react/jsx-dev-runtime\");\nvar _jsxFileName = \"C:\\\\Users\\\\Sasha\\\\Desktop\\\\hahaton\\\\hahaton-front\\\\node_modules\\\\expo-router\\\\build\\\\modal\\\\ModalsRenderer.web.js\";\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ModalsRenderer = void 0;\nconst native_1 = require(\"@react-navigation/native\");\nconst react_native_1 = require(\"react-native-web/dist/index\");\nconst ModalComponent_1 = require(\"./ModalComponent\");\nconst utils_1 = require(\"./utils\");\nconst ModalStackRouteDrawer_1 = require(\"./web/ModalStackRouteDrawer\");\nconst TransparentModalStackRouteDrawer_1 = require(\"./web/TransparentModalStackRouteDrawer\");\nconst utils_2 = require(\"./web/utils\");\nconst ModalsRenderer = ({\n  children,\n  modalConfigs,\n  onDismissed,\n  onShow\n}) => {\n  return _reactJsxDevRuntime.jsxDEV(\"div\", {\n    style: {\n      flex: 1,\n      display: 'flex'\n    },\n    children: [children, modalConfigs.map(config => _reactJsxDevRuntime.jsxDEV(Modal, {\n      config: config,\n      onDismissed: () => onDismissed?.(config.uniqueId)\n    }, config.uniqueId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 38\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 13\n  }, this);\n};\nexports.ModalsRenderer = ModalsRenderer;\nfunction Modal({\n  config,\n  onDismissed\n}) {\n  const {\n    colors\n  } = (0, native_1.useTheme)();\n  const presentation = (0, utils_1.getStackPresentationType)(config);\n  const isTransparentModal = (0, utils_2.isTransparentModalPresentation)({\n    presentation\n  });\n  const SelectedModalComponent = isTransparentModal ? TransparentModalStackRouteDrawer_1.TransparentModalStackRouteDrawer : ModalStackRouteDrawer_1.ModalStackRouteDrawer;\n  return _reactJsxDevRuntime.jsxDEV(SelectedModalComponent, {\n    routeKey: config.uniqueId,\n    onDismiss: onDismissed,\n    themeColors: colors,\n    options: {\n      presentation,\n      animation: (0, utils_1.getStackAnimationType)(config),\n      headerShown: false,\n      sheetAllowedDetents: config.detents\n    },\n    renderScreen: () => _reactJsxDevRuntime.jsxDEV(react_native_1.View, {\n      style: {\n        flex: 1\n      },\n      children: _reactJsxDevRuntime.jsxDEV(react_native_1.View, Object.assign({}, config.viewProps, {\n        style: [{\n          flex: 1\n        }, config.viewProps?.style],\n        children: _reactJsxDevRuntime.jsxDEV(ModalComponent_1.ModalComponent, {\n          modalConfig: config\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 33\n    }, this)\n  }, config.uniqueId, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 13\n  }, this);\n}","map":{"version":3,"names":["_reactJsxDevRuntime","require","_jsxFileName","native_1","react_native_1","ModalComponent_1","utils_1","ModalStackRouteDrawer_1","TransparentModalStackRouteDrawer_1","utils_2","ModalsRenderer","children","modalConfigs","onDismissed","onShow","jsxDEV","style","flex","display","map","config","Modal","uniqueId","fileName","lineNumber","columnNumber","exports","colors","useTheme","presentation","getStackPresentationType","isTransparentModal","isTransparentModalPresentation","SelectedModalComponent","TransparentModalStackRouteDrawer","ModalStackRouteDrawer","routeKey","onDismiss","themeColors","options","animation","getStackAnimationType","headerShown","sheetAllowedDetents","detents","renderScreen","View","Object","assign","viewProps","ModalComponent","modalConfig"],"sources":["C:\\Users\\Sasha\\Desktop\\hahaton\\hahaton-front\\node_modules\\expo-router\\src\\modal\\ModalsRenderer.web.tsx"],"sourcesContent":["'use client';\n\nimport { useTheme } from '@react-navigation/native';\nimport { View } from 'react-native';\n\nimport { ModalComponent } from './ModalComponent';\nimport type { ModalConfig, ModalsRendererProps } from './types';\nimport { getStackAnimationType, getStackPresentationType } from './utils';\nimport { ModalStackRouteDrawer } from './web/ModalStackRouteDrawer';\nimport { TransparentModalStackRouteDrawer } from './web/TransparentModalStackRouteDrawer';\nimport { isTransparentModalPresentation } from './web/utils';\n\nexport const ModalsRenderer = ({\n  children,\n  modalConfigs,\n  onDismissed,\n  onShow,\n}: ModalsRendererProps) => {\n  return (\n    <div style={{ flex: 1, display: 'flex' }}>\n      {children}\n      {modalConfigs.map((config) => (\n        <Modal\n          key={config.uniqueId}\n          config={config}\n          onDismissed={() => onDismissed?.(config.uniqueId)}\n        />\n      ))}\n    </div>\n  );\n};\n\ninterface ModalProps {\n  config: ModalConfig;\n  onDismissed: () => void;\n}\n\nfunction Modal({ config, onDismissed }: ModalProps) {\n  const { colors } = useTheme();\n\n  const presentation = getStackPresentationType(config);\n  const isTransparentModal = isTransparentModalPresentation({ presentation });\n\n  const SelectedModalComponent = isTransparentModal\n    ? TransparentModalStackRouteDrawer\n    : ModalStackRouteDrawer;\n\n  return (\n    <SelectedModalComponent\n      routeKey={config.uniqueId}\n      onDismiss={onDismissed}\n      themeColors={colors}\n      key={config.uniqueId}\n      options={{\n        presentation,\n        animation: getStackAnimationType(config),\n        headerShown: false,\n        sheetAllowedDetents: config.detents,\n      }}\n      renderScreen={() => (\n        <View style={{ flex: 1 }}>\n          <View {...config.viewProps} style={[{ flex: 1 }, config.viewProps?.style]}>\n            <ModalComponent modalConfig={config} />\n          </View>\n        </View>\n      )}\n    />\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}