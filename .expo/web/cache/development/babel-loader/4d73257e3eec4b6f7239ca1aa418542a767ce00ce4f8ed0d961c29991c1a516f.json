{"ast":null,"code":"\"use strict\";\n'use client';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Screen = Screen;\nexports.isScreen = isScreen;\nconst native_1 = require(\"@react-navigation/native\");\nconst react_1 = require(\"react\");\nconst useNavigation_1 = require(\"../useNavigation\");\nconst useSafeLayoutEffect_1 = require(\"./useSafeLayoutEffect\");\nconst stack_1 = require(\"../utils/stack\");\nfunction Screen({\n  name,\n  options\n}) {\n  if (name) {\n    throw new Error(`The name prop on the Screen component may only be used when it is inside a Layout route`);\n  }\n  const route = (0, native_1.useRoute)();\n  const navigation = (0, useNavigation_1.useNavigation)();\n  const isFocused = navigation.isFocused();\n  const isPreloaded = (0, stack_1.isRoutePreloadedInStack)(navigation.getState(), route);\n  (0, useSafeLayoutEffect_1.useSafeLayoutEffect)(() => {\n    if (options && Object.keys(options).length) {\n      if (!isPreloaded || isPreloaded && isFocused) {\n        navigation.setOptions(options);\n      }\n    }\n  }, [isFocused, isPreloaded, navigation, options]);\n  return null;\n}\nfunction isScreen(child, contextKey) {\n  if ((0, react_1.isValidElement)(child) && child && child.type === Screen) {\n    if (typeof child.props === 'object' && child.props && 'name' in child.props && !child.props.name) {\n      throw new Error(`<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must have a \\`name\\` prop when used as a child of a Layout Route.`);\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (['children', 'component', 'getComponent'].some(key => child.props && typeof child.props === 'object' && key in child.props)) {\n        throw new Error(`<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must not have a \\`children\\`, \\`component\\`, or \\`getComponent\\` prop when used as a child of a Layout Route`);\n      }\n    }\n    return true;\n  }\n  return false;\n}","map":{"version":3,"names":["exports","Screen","isScreen","native_1","require","react_1","useNavigation_1","useSafeLayoutEffect_1","stack_1","name","options","Error","route","useRoute","navigation","useNavigation","isFocused","isPreloaded","isRoutePreloadedInStack","getState","useSafeLayoutEffect","Object","keys","length","setOptions","child","contextKey","isValidElement","type","props","process","env","NODE_ENV","some","key"],"sources":["C:\\Users\\Sasha\\Desktop\\hahaton\\hahaton-front\\node_modules\\expo-router\\src\\views\\Screen.tsx"],"sourcesContent":["'use client';\nimport { useRoute } from '@react-navigation/native';\nimport { isValidElement, ReactElement, ReactNode } from 'react';\n\nimport { useNavigation } from '../useNavigation';\nimport { useSafeLayoutEffect } from './useSafeLayoutEffect';\nimport { isRoutePreloadedInStack } from '../utils/stack';\n\nexport type ScreenProps<TOptions extends Record<string, any> = Record<string, any>> = {\n  /**\n   * Name is required when used inside a Layout component.\n   *\n   * When used in a route, this can be an absolute path like `/(root)` to the parent route or a relative path like `../../` to the parent route.\n   * This should not be used inside of a Layout component.\n   * @example `/(root)` maps to a layout route `/app/(root).tsx`.\n   */\n  name?: string;\n  initialParams?: Record<string, any>;\n  options?: TOptions;\n};\n\n/** Component for setting the current screen's options dynamically. */\nexport function Screen<TOptions extends object = object>({ name, options }: ScreenProps<TOptions>) {\n  if (name) {\n    throw new Error(\n      `The name prop on the Screen component may only be used when it is inside a Layout route`\n    );\n  }\n  const route = useRoute();\n  const navigation = useNavigation();\n  const isFocused = navigation.isFocused();\n  const isPreloaded = isRoutePreloadedInStack(navigation.getState(), route);\n\n  useSafeLayoutEffect(() => {\n    if (options && Object.keys(options).length) {\n      // React Navigation will infinitely loop in some cases if an empty object is passed to setOptions.\n      // https://github.com/expo/router/issues/452\n      if (!isPreloaded || (isPreloaded && isFocused)) {\n        navigation.setOptions(options);\n      }\n    }\n  }, [isFocused, isPreloaded, navigation, options]);\n\n  return null;\n}\n\nexport function isScreen(\n  child: ReactNode,\n  contextKey?: string\n): child is ReactElement<ScreenProps & { name: string }> {\n  if (isValidElement(child) && child && child.type === Screen) {\n    if (\n      typeof child.props === 'object' &&\n      child.props &&\n      'name' in child.props &&\n      !child.props.name\n    ) {\n      throw new Error(\n        `<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must have a \\`name\\` prop when used as a child of a Layout Route.`\n      );\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (\n        ['children', 'component', 'getComponent'].some(\n          (key) => child.props && typeof child.props === 'object' && key in child.props\n        )\n      ) {\n        throw new Error(\n          `<Screen /> component in \\`default export\\` at \\`app${contextKey}/_layout\\` must not have a \\`children\\`, \\`component\\`, or \\`getComponent\\` prop when used as a child of a Layout Route`\n        );\n      }\n    }\n\n    return true;\n  }\n\n  return false;\n}\n"],"mappings":";AAAA,YAAY;;;;;AAsBZA,OAAA,CAAAC,MAAA,GAAAA,MAAA;AAwBAD,OAAA,CAAAE,QAAA,GAAAA,QAAA;AA7CA,MAAAC,QAAA,GAAAC,OAAA;AACA,MAAAC,OAAA,GAAAD,OAAA;AAEA,MAAAE,eAAA,GAAAF,OAAA;AACA,MAAAG,qBAAA,GAAAH,OAAA;AACA,MAAAI,OAAA,GAAAJ,OAAA;AAgBA,SAAgBH,MAAMA,CAAmC;EAAEQ,IAAI;EAAEC;AAAO,CAAyB;EAC/F,IAAID,IAAI,EAAE;IACR,MAAM,IAAIE,KAAK,CACb,yFAAyF,CAC1F;EACH;EACA,MAAMC,KAAK,GAAG,IAAAT,QAAA,CAAAU,QAAQ,GAAE;EACxB,MAAMC,UAAU,GAAG,IAAAR,eAAA,CAAAS,aAAa,GAAE;EAClC,MAAMC,SAAS,GAAGF,UAAU,CAACE,SAAS,EAAE;EACxC,MAAMC,WAAW,GAAG,IAAAT,OAAA,CAAAU,uBAAuB,EAACJ,UAAU,CAACK,QAAQ,EAAE,EAAEP,KAAK,CAAC;EAEzE,IAAAL,qBAAA,CAAAa,mBAAmB,EAAC,MAAK;IACvB,IAAIV,OAAO,IAAIW,MAAM,CAACC,IAAI,CAACZ,OAAO,CAAC,CAACa,MAAM,EAAE;MAG1C,IAAI,CAACN,WAAW,IAAKA,WAAW,IAAID,SAAU,EAAE;QAC9CF,UAAU,CAACU,UAAU,CAACd,OAAO,CAAC;MAChC;IACF;EACF,CAAC,EAAE,CAACM,SAAS,EAAEC,WAAW,EAAEH,UAAU,EAAEJ,OAAO,CAAC,CAAC;EAEjD,OAAO,IAAI;AACb;AAEA,SAAgBR,QAAQA,CACtBuB,KAAgB,EAChBC,UAAmB;EAEnB,IAAI,IAAArB,OAAA,CAAAsB,cAAc,EAACF,KAAK,CAAC,IAAIA,KAAK,IAAIA,KAAK,CAACG,IAAI,KAAK3B,MAAM,EAAE;IAC3D,IACE,OAAOwB,KAAK,CAACI,KAAK,KAAK,QAAQ,IAC/BJ,KAAK,CAACI,KAAK,IACX,MAAM,IAAIJ,KAAK,CAACI,KAAK,IACrB,CAACJ,KAAK,CAACI,KAAK,CAACpB,IAAI,EACjB;MACA,MAAM,IAAIE,KAAK,CACb,sDAAsDe,UAAU,8EAA8E,CAC/I;IACH;IAEA,IAAII,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;MACzC,IACE,CAAC,UAAU,EAAE,WAAW,EAAE,cAAc,CAAC,CAACC,IAAI,CAC3CC,GAAG,IAAKT,KAAK,CAACI,KAAK,IAAI,OAAOJ,KAAK,CAACI,KAAK,KAAK,QAAQ,IAAIK,GAAG,IAAIT,KAAK,CAACI,KAAK,CAC9E,EACD;QACA,MAAM,IAAIlB,KAAK,CACb,sDAAsDe,UAAU,yHAAyH,CAC1L;MACH;IACF;IAEA,OAAO,IAAI;EACb;EAEA,OAAO,KAAK;AACd","ignoreList":[]},"metadata":{"hasCjsExports":true},"sourceType":"script","externalDependencies":[]}